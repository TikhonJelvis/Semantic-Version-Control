var json =[{"value" : "(define (map fn ls) (if (null? ls) nil (cons (fn (car ls)) (map fn (cdr ls)))))",
"type" : "list",
"id" : 28,
"body" : [{"value" : "define",
"type" : "keyword",
"id" : 2,
"body" : []}, {"value" : "(map fn ls)",
"type" : "list",
"id" : 7,
"body" : [{"value" : "map",
"type" : "variable",
"id" : 4,
"body" : []}, {"value" : "fn",
"type" : "variable",
"id" : 5,
"body" : []}, {"value" : "ls",
"type" : "variable",
"id" : 6,
"body" : []}]}, {"value" : "(if (null? ls) nil (cons (fn (car ls)) (map fn (cdr ls))))",
"type" : "list",
"id" : 27,
"body" : [{"value" : "if",
"type" : "keyword",
"id" : 9,
"body" : []}, {"value" : "(null? ls)",
"type" : "list",
"id" : 12,
"body" : [{"value" : "null?",
"type" : "variable",
"id" : 11,
"body" : []}, {"value" : "ls",
"type" : "variable",
"id" : 6,
"body" : []}]}, {"value" : "nil",
"type" : "variable",
"id" : 13,
"body" : []}, {"value" : "(cons (fn (car ls)) (map fn (cdr ls)))",
"type" : "list",
"id" : 26,
"body" : [{"value" : "cons",
"type" : "variable",
"id" : 15,
"body" : []}, {"value" : "(fn (car ls))",
"type" : "list",
"id" : 20,
"body" : [{"value" : "fn",
"type" : "variable",
"id" : 5,
"body" : []}, {"value" : "(car ls)",
"type" : "list",
"id" : 19,
"body" : [{"value" : "car",
"type" : "variable",
"id" : 18,
"body" : []}, {"value" : "ls",
"type" : "variable",
"id" : 6,
"body" : []}]}]}, {"value" : "(map fn (cdr ls))",
"type" : "list",
"id" : 25,
"body" : [{"value" : "map",
"type" : "variable",
"id" : 4,
"body" : []}, {"value" : "fn",
"type" : "variable",
"id" : 5,
"body" : []}, {"value" : "(cdr ls)",
"type" : "list",
"id" : 24,
"body" : [{"value" : "cdr",
"type" : "variable",
"id" : 23,
"body" : []}, {"value" : "ls",
"type" : "variable",
"id" : 6,
"body" : []}]}]}]}]}]}, {"value" : "(define (even? num) (= (% num 2.0) 0.0))",
"type" : "list",
"id" : 43,
"body" : [{"value" : "define",
"type" : "keyword",
"id" : 30,
"body" : []}, {"value" : "(even? num)",
"type" : "list",
"id" : 34,
"body" : [{"value" : "even?",
"type" : "variable",
"id" : 32,
"body" : []}, {"value" : "num",
"type" : "variable",
"id" : 33,
"body" : []}]}, {"value" : "(= (% num 2.0) 0.0)",
"type" : "list",
"id" : 42,
"body" : [{"value" : "=",
"type" : "variable",
"id" : 36,
"body" : []}, {"value" : "(% num 2.0)",
"type" : "list",
"id" : 40,
"body" : [{"value" : "%",
"type" : "variable",
"id" : 38,
"body" : []}, {"value" : "num",
"type" : "variable",
"id" : 33,
"body" : []}, {"value" : "2.0",
"type" : "number",
"id" : 39,
"body" : []}]}, {"value" : "0.0",
"type" : "number",
"id" : 41,
"body" : []}]}]}, {"value" : "(define x 1.0)",
"type" : "list",
"id" : 48,
"body" : [{"value" : "define",
"type" : "keyword",
"id" : 45,
"body" : []}, {"value" : "x",
"type" : "variable",
"id" : 46,
"body" : []}, {"value" : "1.0",
"type" : "number",
"id" : 47,
"body" : []}]}, {"value" : "(define x 2.0)",
"type" : "list",
"id" : 52,
"body" : [{"value" : "define",
"type" : "keyword",
"id" : 50,
"body" : []}, {"value" : "x",
"type" : "variable",
"id" : 46,
"body" : []}, {"value" : "2.0",
"type" : "number",
"id" : 51,
"body" : []}]}];
var parseTree = new ParseTree(json);
var iterator = parseTree.iterator();
while (iterator.hasNext()) {
	var node = iterator.next().getPrettyNode();
	Constants.BODY.append(node);
}
